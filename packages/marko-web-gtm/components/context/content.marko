import gql from "graphql-tag";
import { isFunction, warn } from "@parameter1/base-cms-utils";
import { contentBuilder } from "../../context";

$ const { req } = out.global;
$ const { id } = input;
$ const builder = isFunction(input.builder) ? input.builder : contentBuilder;

$ const queryFragment = input.queryFragment || gql`
fragment ContentContextFragment on Content {
  id
  type
  name
  labels
  siteContext {
    path
  }
  published
  createdBy {
    id
    username
    firstName
    lastName
  }
  company {
    id
    name
  }
  primarySection {
    id
    name
    alias
    fullName
    hierarchy {
      id
      name
      alias
    }
  }
  taxonomy {
    edges {
      node {
        id
        type
        name
        fullName
      }
    }
  }
  userRegistration {
    isCurrentlyRequired
    accessLevels
  }
  ... on Authorable {
    authors {
      edges {
        node {
          id
          name
        }
      }
    }
  }
  websiteSchedules {
    section {
      id
      name
    }
  }
   emailSchedules {
      id
      deploymentDate
      newsletter {
        id
        name
      }
    }
    magazineSchedules {
      id
      issue {
        id
        name
        mailDate(input: {format:"MM/DD/YYYY"})
      }
    }
}
`;

<if(id)>
  <marko-web-query|{ node }| name="content" params={ id, queryFragment }>
    $ const context = builder({ type: "content", obj: node, req });
    <${input.renderBody} context=context />
  </marko-web-query>
</if>
<else>
  $ warn('Unable to create GTM content context: no content id was provided.');
</else>
